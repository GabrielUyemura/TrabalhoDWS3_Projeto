{% extends "templates/base.html" %}

{% block content %}
  <div x-data="disciplinaForm()">
    <div class="row">
      <div class="col-12">

        <div class="card-header mt-2">
          {{title}}
        </div>

        <div class="card-body">
          <div class="">
            <form>
              <div class="row">
                <div class="col-md-2">
                  <div class="form-group">
                    <label for="dataAberturaDisciplina">Data de Abertura</label>
                    <input type="date" name="dataAberturaDisciplina" id="dataAberturaDisciplina" class="form-control" x-model="form.dataAberturaDisciplina" x-bind:disabled="disabled">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="idCurso">Curso</label>
                    <select class="form-control" name="idCurso" id="idCurso" x-model="form.idCurso" x-bind:disabled="disabled">
                      <option value="" selected="selected">Selecione</option>
                      {% for curso in cursos %}
                        <option value="{{ curso.idcurso }}" x-bind:selected="form.idCurso == '{{ curso.idcurso }}'">{{ curso.titulo }}</option>
                      {% endfor %}
                    </select>
                  </div>
                </div>

                <div class="col-md-5">
                  <div class="form-group">
                    <label for="tituloDisciplina">Título</label>
                    <input type="text" class="form-control" name="tituloDisciplina" id="tituloDisciplina" x-model="form.tituloDisciplina" x-bind:disabled="disabled">
                  </div>
                </div>

                <div class="col-md-2">
                  <div class="form-group">
                    <label for="chDisciplina">Carga Horária (CH)</label>
                    <input type="number" class="form-control" name="chDisciplina" id="chDisciplina" x-model="form.chDisciplina" x-bind:disabled="disabled">
                  </div>
                </div>
              </div>

              <button type="button" @click="updateForm()" x-show="!disabled" class="btn btn-primary mt-4">Salvar</button>
              <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Excluir</button>
              <a href="/disciplina/manutDisciplina" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Voltar</a>
            </form>

            <div class="mt-3">
              <template x-if="message">
                <div :class="messageClass" x-text="message"></div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    window.onload = function () {
      windowOnLoad();

      const localErro = "{{erro}}";
      if (localErro != "") {
        alert("[vwFRUDrDisciplina|onload]Servidor retornou o erro:" + localErro);
      }
      $("#dataAberturaDisciplina").focus();
    };

    function disciplinaForm() {
      return {
        form: {
          idDisciplina: "{{ data.iddisciplina }}",
          tituloDisciplina: "{{ data.titulodisciplina }}",
          chDisciplina: "{{ data.chdisciplina }}",
          dataAberturaDisciplina: "{{ data.dataaberturadisciplina }}",
          idCurso: "{{ data.idcurso }}",
          removidoDisciplina: false
        },
        message: '',
        messageClass: '',
        disabled: {{ disabled }},

        async updateForm() {
          if (!this.form.dataAberturaDisciplina || !this.form.idCurso || !this.form.idDisciplina || !this.form.tituloDisciplina || !this.form.chDisciplina) {
            this.message = 'Preencha todos os campos antes de continuar.';
            this.messageClass = 'alert alert-warning';
            return;
          }

          try {
            const response = await fetch(`/disciplina/updateDisciplina`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(this.form)
            });

            const result = await response.json();
            if (result.status === 'ok') {
              this.message = 'Disciplina atualizada com sucesso.';
              this.messageClass = 'alert alert-success';
            } else {
              this.message = `Erro: ${result.status}`;
              this.messageClass = 'alert alert-danger';
            }
          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        async deleteForm() {
          try {
            const response = await fetch(`/disciplina/deleteDisciplina`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({idDisciplina: this.form.idDisciplina})
            });

            const result = await response.json();
            if (result.status === 'ok') {
              alert('Disciplina excluída com sucesso.');
              window.location.href = '/disciplina/manutDisciplina';
            } else {
              this.message = `Erro: ${result.status}`;
              this.messageClass = 'alert alert-danger';
            }
          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        resetForm() {
          this.form = {
            idDisciplina: '',
            tituloDisciplina: '',
            chDisciplina: '',
            dataAberturaDisciplina: '',
            idCurso: '',
            removidoDisciplina: false
          };
          this.message = '';
          this.messageClass = '';
        }
      };
    }
  </script>
{% endblock %}