{% extends "templates/base.html" %}

{% block content %}
  <div x-data="cursoForm()">
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active">{{ title }}</li>
    </ol>
    <div class="row">
      <div class="col-12">

        <div class="card-header">
          {{ title }}
        </div>

        <div class="card-body">
          <div class="">

            <form>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group">
                    <label for="titulo">Título</label>
                    <input type="text" class="form-control" id="titulo" x-model="form.titulo" required="required">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="dataAbertura">Data de Abertura</label>
                    <input type="date" class="form-control" id="dataAbertura" x-model="form.dataAbertura" required="required">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="cargaHoraria">Carga Horária</label>
                    <input type="number" class="form-control" id="cargaHoraria" x-model="form.cargaHoraria">
                  </div>
                </div>
              </div>

              <button type="button" @click="insertForm()" class="btn btn-primary mt-4">Salvar</button>
              <a href="/curso/manutCurso" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
            </form>

            <div class="mt-3">
              <template x-if="message">
                <div :class="messageClass" x-text="message"></div>
              </template>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>

  <script>
    window.onload = function () {
      windowOnLoad();

      const localErro = "{{ erro }}";
      if (localErro != "") {
        alert("[vwFCrCurso|onload] Servidor retornou o erro: " + localErro);
      }
      $("#titulo").focus();
    };

    function cursoForm() {
      return {
        form: {
          titulo: '',
          dataAbertura: '',
          cargaHoraria: null,
          removido: false,
        },
        message: '',
        messageClass: '',

        async insertForm() {
          try {
            console.log("Dados enviados:", JSON.stringify(this.form));
            const response = await fetch('/curso/insertCurso', {
              method: 'POST',
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(this.form)
            });

            const result = await response.json();
            console.log("Resposta do servidor:", response);
            console.log("Dados recebidos:", result);
            if (result.status == "ok") {
              alert("Curso cadastrado com sucesso");
              this.resetForm();
            } else {
              const errorData = result.status;
              this.message = `Erro! Não foi possível cadastrar o curso: ${errorData}`;
              this.messageClass = 'alert alert-danger';
            }
          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        resetForm() {
          this.form = {
            titulo: '',
            dataAbertura: '',
            cargaHoraria: null,
            removido: false,
          };
          this.message = '';
        }
      };
    }
  </script>

{% endblock %}
